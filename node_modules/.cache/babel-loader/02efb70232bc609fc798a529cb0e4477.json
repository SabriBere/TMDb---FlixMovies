{"ast":null,"code":"var _jsxFileName = \"/home/sabrina/TMDb-FlixMovies/src/Hooks/AuthContext.jsx\",\n    _s = $RefreshSig$();\n\n//Acá armo un PRovaider para ver si el usuario se logueo\nimport { createContext, useState, useEffect } from 'react'; //1. Creo contexto \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  // información del usuario\n  user: null,\n  isAuthenticated: false,\n  // si está o no logueado\n  toggleAuth: () => null // función para actualizar el contexto\n\n}; //2. Creo el context provide y sus funcionalidaes\n\nexport const AuthContext = /*#__PURE__*/createContext(initialState);\nexport const AuthContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isLoggedIn, setIsLoggedIn] = useState({\n    user: null,\n    isAuthenticated: false\n  });\n\n  const toggleAuth = user => {\n    //llamo al set isLoggedIn, porque si está logueado tengo que cambiar el estado, y lo ejecuto\n    //Actualiza los valores una vez logueado\n    setIsLoggedIn({\n      user,\n      isAuthenticated: !isLoggedIn.isAuthenticated\n    });\n  };\n\n  useEffect(() => {\n    const userStorage = JSON.parse(localStorage.getItem(\"user\"));\n    userStorage ? setIsLoggedIn({\n      user: userStorage.name,\n      isAuthenticated: true\n    }) : setIsLoggedIn({\n      user: null,\n      isAuthenticated: false\n    });\n  }, []);\n  /* 3. Tengo que pasar las propiedades que tendra el provide y que defini acá */\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: { ...isLoggedIn,\n      toggleAuth\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AuthContextProvider, \"1HDRlkjkaytZMkcw/QidJIZpHBY=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","initialState","user","isAuthenticated","toggleAuth","AuthContext","AuthContextProvider","children","isLoggedIn","setIsLoggedIn","userStorage","JSON","parse","localStorage","getItem","name"],"sources":["/home/sabrina/TMDb-FlixMovies/src/Hooks/AuthContext.jsx"],"sourcesContent":["//Acá armo un PRovaider para ver si el usuario se logueo\n\nimport { createContext, useState, useEffect } from 'react';\n\n//1. Creo contexto \nconst initialState = {\n    // información del usuario\n    user: null,\n    isAuthenticated: false, // si está o no logueado\n    toggleAuth: () => null, // función para actualizar el contexto\n}\n\n//2. Creo el context provide y sus funcionalidaes\nexport const AuthContext = createContext(initialState);\n\nexport const AuthContextProvider = ({ children }) => {\n    const [isLoggedIn, setIsLoggedIn] = useState({\n        user: null,\n        isAuthenticated: false,\n    })\n\n    const toggleAuth = (user) => {\n\n        //llamo al set isLoggedIn, porque si está logueado tengo que cambiar el estado, y lo ejecuto\n        //Actualiza los valores una vez logueado\n        setIsLoggedIn({\n            user,\n            isAuthenticated: !isLoggedIn.isAuthenticated,\n        })\n    }\n\n    useEffect(() => {\n        const userStorage = JSON.parse(localStorage.getItem(\"user\"));\n        userStorage\n            ? setIsLoggedIn({ user: userStorage.name, isAuthenticated: true })\n            : setIsLoggedIn({ user: null, isAuthenticated: false });\n    }, []);\n\n    /* 3. Tengo que pasar las propiedades que tendra el provide y que defini acá */\n\n    return (<AuthContext.Provider value={{ ...isLoggedIn, toggleAuth }}>{children}</AuthContext.Provider>)\n\n\n}\n\nexport default AuthContext;\n\n"],"mappings":";;;AAAA;AAEA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD,C,CAEA;;;AACA,MAAMC,YAAY,GAAG;EACjB;EACAC,IAAI,EAAE,IAFW;EAGjBC,eAAe,EAAE,KAHA;EAGO;EACxBC,UAAU,EAAE,MAAM,IAJD,CAIO;;AAJP,CAArB,C,CAOA;;AACA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAACG,YAAD,CAAjC;AAEP,OAAO,MAAMK,mBAAmB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACjD,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC;IACzCG,IAAI,EAAE,IADmC;IAEzCC,eAAe,EAAE;EAFwB,CAAD,CAA5C;;EAKA,MAAMC,UAAU,GAAIF,IAAD,IAAU;IAEzB;IACA;IACAO,aAAa,CAAC;MACVP,IADU;MAEVC,eAAe,EAAE,CAACK,UAAU,CAACL;IAFnB,CAAD,CAAb;EAIH,CARD;;EAUAH,SAAS,CAAC,MAAM;IACZ,MAAMU,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAApB;IACAJ,WAAW,GACLD,aAAa,CAAC;MAAEP,IAAI,EAAEQ,WAAW,CAACK,IAApB;MAA0BZ,eAAe,EAAE;IAA3C,CAAD,CADR,GAELM,aAAa,CAAC;MAAEP,IAAI,EAAE,IAAR;MAAcC,eAAe,EAAE;IAA/B,CAAD,CAFnB;EAGH,CALQ,EAKN,EALM,CAAT;EAOA;;EAEA,oBAAQ,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE,EAAE,GAAGK,UAAL;MAAiBJ;IAAjB,CAA7B;IAAA,UAA6DG;EAA7D;IAAA;IAAA;IAAA;EAAA,QAAR;AAGH,CA5BM;;GAAMD,mB;;KAAAA,mB;AA8Bb,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}