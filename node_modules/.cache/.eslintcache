[{"/home/sabrina/TMDb-FlixMovies/src/index.js":"1","/home/sabrina/TMDb-FlixMovies/src/App.jsx":"2","/home/sabrina/TMDb-FlixMovies/src/commons/NewUser.jsx":"3","/home/sabrina/TMDb-FlixMovies/src/commons/LogUser.jsx":"4","/home/sabrina/TMDb-FlixMovies/src/components/Header.jsx":"5","/home/sabrina/TMDb-FlixMovies/src/components/MyFavorites.jsx":"6","/home/sabrina/TMDb-FlixMovies/src/components/Peliculas.jsx":"7","/home/sabrina/TMDb-FlixMovies/src/components/Content.jsx":"8","/home/sabrina/TMDb-FlixMovies/src/Hooks/AuthContext.jsx":"9","/home/sabrina/TMDb-FlixMovies/src/components/SearchUsers.jsx":"10","/home/sabrina/TMDb-FlixMovies/src/components/Navbar.jsx":"11","/home/sabrina/TMDb-FlixMovies/src/components/Series.jsx":"12","/home/sabrina/TMDb-FlixMovies/src/Hooks/useInput.jsx":"13","/home/sabrina/TMDb-FlixMovies/src/components/ContentOtherUsers.jsx":"14","/home/sabrina/TMDb-FlixMovies/src/components/SingleMovie.jsx":"15","/home/sabrina/TMDb-FlixMovies/src/components/Navbar1.jsx":"16"},{"size":2315,"mtime":1654543445154,"results":"17","hashOfConfig":"18"},{"size":1414,"mtime":1660588271900,"results":"19","hashOfConfig":"18"},{"size":2103,"mtime":1654543445150,"results":"20","hashOfConfig":"18"},{"size":3210,"mtime":1655126178010,"results":"21","hashOfConfig":"18"},{"size":1814,"mtime":1654543445150,"results":"22","hashOfConfig":"18"},{"size":1951,"mtime":1654543445150,"results":"23","hashOfConfig":"18"},{"size":1927,"mtime":1654551873078,"results":"24","hashOfConfig":"18"},{"size":3002,"mtime":1654543445150,"results":"25","hashOfConfig":"18"},{"size":1414,"mtime":1654543445142,"results":"26","hashOfConfig":"18"},{"size":1464,"mtime":1654543445154,"results":"27","hashOfConfig":"18"},{"size":3368,"mtime":1655140911531,"results":"28","hashOfConfig":"18"},{"size":504,"mtime":1654543445154,"results":"29","hashOfConfig":"18"},{"size":243,"mtime":1654543445142,"results":"30","hashOfConfig":"18"},{"size":1317,"mtime":1654543445150,"results":"31","hashOfConfig":"18"},{"size":154,"mtime":1658930229190,"results":"32","hashOfConfig":"18"},{"size":221,"mtime":1660588811965,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"mxe6rw",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sabrina/TMDb-FlixMovies/src/index.js",[],["77","78"],"/home/sabrina/TMDb-FlixMovies/src/App.jsx",["79","80","81"],"/home/sabrina/TMDb-FlixMovies/src/commons/NewUser.jsx",["82"],"import React from 'react'\nimport axios from 'axios'\nimport useInput from '../Hooks/useInput'\nimport { useNavigate } from 'react-router-dom'\nimport '../styles/newUser.scss'\n\n\nconst NewUser = () => {\n    //fatarían validaciones para los coampos del formulario\n    const navigate = useNavigate()\n    const name = useInput()\n    const email = useInput()\n    const password = useInput()\n\n    const handlerSubmit = (e) => {\n        e.preventDefault()\n        axios.post('http://localhost:3001/api/user/register', { name: name.value, email: email.value, password: password.value })\n\n            .then(info => {\n                if (info.data == \"Usuario ya existente\") {\n                    alert(info.data)\n                    window.location.reload()\n                }\n                /*  else {\n                     navigate(\"/login\")\n                 } */\n            })\n            .catch((error) => console.log(error))\n        navigate('/login')\n    }\n\n    return (\n        <body className=\"body\">\n\n            <form className=\"form\" onSubmit={handlerSubmit}>\n                <h1 class='title-register-login'>Registrar en FlixMovies</h1>\n                <div class=\"mb-3\">\n                    <label class=\"form-label\"></label>\n                    <input class=\"form-control input\" placeholder='User name' {...name} />\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"exampleInputEmail1\" class=\"form-label \"></label>\n                    <input type=\"email\" class=\"form-control input\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder='example@email.com' {...email} />\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"exampleInputPassword1\" class=\"form-label\"></label>\n                    <input type=\"password\" class=\"form-control input\" id=\"exampleInputPassword1\" placeholder='password' {...password} />\n                </div>\n                <button type=\"submit\" class=\"btn btn-danger input btn-form btn-register\">Registrarse</button>\n            </form>\n        </body>\n    )\n}\n\n\nexport default NewUser;","/home/sabrina/TMDb-FlixMovies/src/commons/LogUser.jsx",[],"/home/sabrina/TMDb-FlixMovies/src/components/Header.jsx",["83","84","85","86"],"import React, { useState, useEffect } from 'react'\nimport { AiFillPlayCircle, AiFillInfoCircle } from 'react-icons/ai'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport '../styles/peliculas.scss'\nimport Peliculas from './Peliculas'\n\n\nconst Header = () => {\n\n    const [seccionMovie, setSeccionMovie] = useState([])\n    const token = '5a2cd889e715aa8e13b5764264b5166c'\n\n    useEffect(() => {\n        axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${token}`)\n            .then((seccionMovie) => setSeccionMovie(seccionMovie.data.results))\n\n    }, [])\n\n    return (\n        <div>\n\n            <div class=\"pelicula-principal\">\n                <div class=\"contenedor\">\n                    <h3 class=\"titulo\">Interestellar</h3>\n                    <p class=\"descripcion\">\n                        Narra las aventuras de un grupo de exploradores que hacen uso de un agujero de gusano recientemente descubierto para superar las limitaciones de los viajes espaciales tripulados y vencer las inmensas distancias que tiene un viaje interestelar.\n                    </p>\n                    <button role=\"button\" class=\"boton\"><i><AiFillPlayCircle /></i>Reproducir</button>\n                    <button role=\"button\" class=\"boton\"><i><AiFillInfoCircle /></i>Más información</button>\n                </div>\n            </div>\n\n            {/* <Link class='catalogo' to={'/home'}> */}\n            <Peliculas />\n            {/* </Link> */}\n\n        </div>\n    )\n}\n\nexport default Header;\n\n/* \n    const [movie, setMovie] = useState({})\n    const token = '5a2cd889e715aa8e13b5764264b5166'\n\n    useEffect(() => {\n        axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${token}`)\n            .then((res) => res.data)\n            .then((movie) => setMovie(movie))\n    }) */","/home/sabrina/TMDb-FlixMovies/src/components/MyFavorites.jsx",["87","88","89","90","91"],"import React, { useEffect, useState } from 'react'\nimport { MdOutlineFavoriteBorder } from 'react-icons/md'\nimport axios from 'axios'\nimport '../styles/peliculas.scss'\n\n\nconst MyFavorites = () => {\n\n    const user_id = JSON.parse(localStorage.getItem(\"user\")).id\n    const [favorites, setFavorites] = useState([])\n    const [remFav, setRemFav] = useState({})\n\n    const handlerCLickRemove = (favorites) => {\n        axios.delete(`http://localhost:3001/api/favorites/remove/${user_id}/${favorites.code}`\n        )\n            .then((data) => console.log(data))\n            .then((remFav) => setRemFav(remFav))\n        window.location.reload()\n    }\n\n    useEffect(() => {\n        axios.get(`http://localhost:3001/api/favorites/${user_id}`)\n            .then(res => res.data)\n            .then((favorites) => setFavorites(favorites))\n\n\n    }, [])\n\n    return (\n\n        <div >\n            {/* Agregar botón para eliminar de favoritos */}\n            {/* Muetra la imagen y si haces click te muetra más info */}\n            <h1 class='titles-estrenos'>Mis favoritos</h1>\n\n            <div className=\"movie-grid\">\n                {favorites.length >= 1 ?\n                    favorites.map((fav, i) => {\n                        return (\n                            <div >\n                                <a onClick={() => { handlerCLickRemove(fav) }} class=\"btn btn-danger pop-fav\"><MdOutlineFavoriteBorder /></a>\n                                <img class='pop-img' key={i} src={`https://image.tmdb.org/t/p/w200/${fav.imagen}`} />\n                                <p class='pop-title'>{fav.title}</p>\n                            </div>\n                        )\n                    }) : <h4 class='pop-title'>Aun no tenes favoritos</h4>\n                }\n            </div>\n        </div >\n    )\n\n}\n\n{/* <>{(favoritos)\n    ?favoritos.map(favorito => handleFavorit(favorito))\n    :\"You don't have favorites films\"}\n    </> */}\n\nexport default MyFavorites;","/home/sabrina/TMDb-FlixMovies/src/components/Peliculas.jsx",["92","93","94","95","96"],"import react from 'react'\nimport axios from 'axios'\nimport { useState, useEffect } from 'react';\nimport { MdFavorite, MdOutlineFavoriteBorder } from 'react-icons/md'\nimport '../styles/peliculas.scss'\n\nconst Peliculas = () => {\n    const [seccionMovie, setSeccionMovie] = useState([])\n    const [addFav, setAddfav] = useState({})\n    const token = '5a2cd889e715aa8e13b5764264b5166c'\n    /* const user_id = JSON.parse(localStorage.getItem(\"user\")).id\n    console.log(user_id) */\n\n    useEffect(() => {\n        axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${token}`)\n            .then((seccionMovie) => setSeccionMovie(seccionMovie.data.results))\n\n    }, [])\n\n\n\n\n    const handlerCLickAdd = (movie) => {\n        console.log(movie)\n        axios.put('http://localhost:3001/api/favorites/add', { code: movie.id, title: movie.title, overview: movie.overview, imagen: movie.poster_path, /* userId: user_id */ })\n\n\n    }\n\n    /* Hacer un onClick para que muestre más info de la pelicula */\n\n    return (\n        <div>\n            <h1 class='titles-estrenos'>Peliculas populares</h1>\n\n            <div className=\"movie-grid\">\n                {\n                    seccionMovie.map((sec, i) => {\n                        return (\n                            <div key={i}>\n                                {/* Hacer un ternario con los botones */}\n\n                                <bottom onClick={() => handlerCLickAdd(sec)} class=\"btn btn-danger pop-fav\"><MdFavorite /></bottom>\n                                <img class='pop-img' src={`https://image.tmdb.org/t/p/w200/${sec.poster_path}`} />\n                                <p class='pop-title'>{sec.title}</p>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n\n}\n\nexport default Peliculas;\n\n/* `https://api.themoviedb.org/3/discover/movie?api_key=${token}` Para el header */","/home/sabrina/TMDb-FlixMovies/src/components/Content.jsx",["97","98","99","100","101","102"],"import React from 'react'\nimport axios from 'axios'\nimport { MdFavorite, MdOutlineFavoriteBorder } from 'react-icons/md'\nimport { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport peliculas from '../styles/peliculas.scss'\n\n\n\nconst Content = () => {\n    //Si no está logeado no puede buscar\n\n    const token = '5a2cd889e715aa8e13b5764264b5166'\n    const { value } = useParams()\n    const user_id = JSON.parse(localStorage.getItem(\"user\")).id\n    const [addFav, setAddfav] = useState({})\n    const [search, setSearch] = useState([])\n\n\n\n    const handlerCLickAdd = (movie) => {\n        console.log(movie)\n        axios.put('http://localhost:3001/api/favorites/add', { code: movie.id, title: movie.title, overview: movie.overview, imagen: movie.poster_path, userId: user_id })\n\n    }\n\n    const handlerCLickRemove = (movie) => {\n        axios.delete(`http://localhost:3001/api/favorites/remove/${user_id}/${movie.id}`\n        )\n            .then((res) => res.data)\n            .then((addfav) => setAddfav(addfav))\n    }\n\n    useEffect(() => {\n        axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${token}c&query=${value}`)\n            .then((res) => res.data)\n            .then((search) => setSearch(search.results))\n    }, [])\n\n\n\n    return (\n        <div>\n            <h1 class='titles-estrenos'>Resultados</h1>\n            <div className=\"movie-grid\" >\n                {\n                    search.map((movie, i) => {\n                        return (\n                            <div key={i}>\n\n\n                                <a onClick={() => { handlerCLickRemove(movie) }} class=\"btn btn-danger pop-fav\"><MdOutlineFavoriteBorder /></a>\n                                <br />\n                                <br />\n\n                                <a onClick={() => { handlerCLickAdd(movie) }} class=\"btn btn-danger pop-fav\"><MdFavorite /> </a>\n\n                                {(movie.poster_path !== null) ? <img class='pop-img' src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`} /> :\n                                    <div class='noContent'>\n                                        <br />\n                                        <br />\n                                        <br />\n                                        <br />\n                                        <br />\n                                        <p class='pop-title'>Imagen no disponible</p>\n                                        <br />\n                                        <br />\n                                        <br />\n                                        <br />\n                                        <br />\n                                        <br />\n                                    </div>}\n\n                                <p class='pop-title'>{movie.title}</p>\n\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </div >\n    )\n}\n\nexport default Content;\n","/home/sabrina/TMDb-FlixMovies/src/Hooks/AuthContext.jsx",[],"/home/sabrina/TMDb-FlixMovies/src/components/SearchUsers.jsx",["103"],"import react from 'react'\nimport axios from 'axios'\nimport { useState } from 'react'\nimport '../styles/SearchUsers.scss'\nimport ContentOtherUsers from './ContentOtherUsers'\n\n\nconst SearchUsers = () => {\n    const [searchUser, setSearchUser] = useState([])\n    const [value, setValue] = useState('')\n    const user_id = JSON.parse(localStorage.getItem(\"user\")).id\n\n    const handlerClick = (e) => {\n        setValue(e.target.value)\n    }\n\n    const handlerSubmit = (e) => {\n        //buscar a una persona\n        e.preventDefault()\n        axios.get(`http://localhost:3000/api/user/${value}/${user_id}`)\n\n            .then((searchUser) => setSearchUser(searchUser.data));\n    }\n\n    \n    /* Falta mostrar los resultados de las pelis favoritas de x usuario*/\n    return (\n        <div>\n            <h2 class='title-search-users'>Busca otros flixperos</h2>\n            <form class=\"d-flex form\" role=\"search\" onSubmit={handlerSubmit}>\n\n                <label class=\"form-label\"></label>\n                <input onChange={handlerClick} type=\"search\" class=\"form-control input\" id=\"exampleInputPassword1\" placeholder=\"Search...\" />\n                <br />\n                <div>\n                    <button type=\"submit\" class=\"btn btn-danger input btn-form\">Buscar</button>\n                </div>\n            </form >\n\n            <div>\n                <ContentOtherUsers searchUser={searchUser} />\n            </div>\n        </div >\n    )\n\n}\n\nexport default SearchUsers ","/home/sabrina/TMDb-FlixMovies/src/components/Navbar.jsx",[],["104","105"],"/home/sabrina/TMDb-FlixMovies/src/components/Series.jsx",["106"],"import React from 'react'\nimport '../styles/series.scss'\n\n\n\nconst Series = () => {\n\n\n    return (\n        <div>\n            <div class='titles'>\n                <h1 class='titles-series'>Series</h1>\n                <h5 class='titles-series'>Proximamente tus series favoritas</h5>\n            </div>\n\n            <div class='gif'>\n                <img class='gif-series' src='https://c.tenor.com/Fg68Ac7j5IgAAAAC/mj-michael-jackson.gif' />\n            </div>\n        </div>\n    )\n}\n\nexport default Series;","/home/sabrina/TMDb-FlixMovies/src/Hooks/useInput.jsx",["107"],"import { useEffect, useState } from 'react'\n\nconst useInput = () => {\n    const [value, setValue] = useState('')\n\n    const onChange = (e) => {\n        setValue(e.target.value)\n    }\n\n    return { value, onChange }\n\n}\n\nexport default useInput;","/home/sabrina/TMDb-FlixMovies/src/components/ContentOtherUsers.jsx",["108"],"import React from 'react'\nimport { MdFavorite } from 'react-icons/md'\nimport axios from 'axios'\nimport '../styles/peliculas.scss'\n\nconst ContentOtherUsers = ({ searchUser }) => {\n\n    const user_id = JSON.parse(localStorage.getItem(\"user\")).id\n\n    const handlerCLickAdd = (movie) => {\n        console.log(movie)\n        axios.put('http://localhost:3001/api/favorites/add', { code: movie.id, title: movie.title, overview: movie.overview, imagen: movie.poster_path, userId: user_id })\n\n    }\n\n\n\n    return (\n        <div>\n            <h1 class='titles-estrenos'>Favoritos de otros users</h1>\n\n            <div className=\"movie-grid\">\n                {\n                    searchUser.map((search, i) => {\n                        return (\n                            <div key={i}>\n\n                                <bottom onClick={() => { handlerCLickAdd(search) }} class=\"btn btn-danger pop-fav\"><MdFavorite /></bottom>\n                                {(search.imagen !== null) ? <img class='pop-img' src={`https://image.tmdb.org/t/p/w200/${search.imagen}`} /> : null}\n                                <p class='pop-title'>{search.title}</p>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ContentOtherUsers;","/home/sabrina/TMDb-FlixMovies/src/components/SingleMovie.jsx",[],"/home/sabrina/TMDb-FlixMovies/src/components/Navbar1.jsx",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":14},{"ruleId":"113","severity":1,"message":"117","line":11,"column":8,"nodeType":"115","messageId":"116","endLine":11,"endColumn":15},{"ruleId":"113","severity":1,"message":"118","line":12,"column":8,"nodeType":"115","messageId":"116","endLine":12,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":20,"column":31,"nodeType":"121","messageId":"122","endLine":20,"endColumn":33},{"ruleId":"113","severity":1,"message":"123","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"113","severity":1,"message":"124","line":11,"column":12,"nodeType":"115","messageId":"116","endLine":11,"endColumn":24},{"ruleId":"125","severity":1,"message":"126","line":29,"column":21,"nodeType":"127","endLine":29,"endColumn":57},{"ruleId":"125","severity":1,"message":"126","line":30,"column":21,"nodeType":"127","endLine":30,"endColumn":57},{"ruleId":"113","severity":1,"message":"128","line":11,"column":12,"nodeType":"115","messageId":"116","endLine":11,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":27,"column":8,"nodeType":"131","endLine":27,"endColumn":10,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":41,"column":33,"nodeType":"127","endLine":41,"endColumn":111},{"ruleId":"135","severity":1,"message":"136","line":42,"column":33,"nodeType":"127","endLine":42,"endColumn":118},{"ruleId":"137","severity":1,"message":"138","line":54,"column":1,"nodeType":"139","messageId":"140","endLine":57,"endColumn":12},{"ruleId":"113","severity":1,"message":"141","line":1,"column":8,"nodeType":"115","messageId":"116","endLine":1,"endColumn":13},{"ruleId":"113","severity":1,"message":"142","line":4,"column":22,"nodeType":"115","messageId":"116","endLine":4,"endColumn":45},{"ruleId":"113","severity":1,"message":"143","line":9,"column":12,"nodeType":"115","messageId":"116","endLine":9,"endColumn":18},{"ruleId":"113","severity":1,"message":"144","line":9,"column":20,"nodeType":"115","messageId":"116","endLine":9,"endColumn":29},{"ruleId":"135","severity":1,"message":"136","line":44,"column":33,"nodeType":"127","endLine":44,"endColumn":115},{"ruleId":"113","severity":1,"message":"145","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":17},{"ruleId":"113","severity":1,"message":"143","line":16,"column":12,"nodeType":"115","messageId":"116","endLine":16,"endColumn":18},{"ruleId":"129","severity":1,"message":"146","line":38,"column":8,"nodeType":"131","endLine":38,"endColumn":10,"suggestions":"147"},{"ruleId":"133","severity":1,"message":"134","line":52,"column":33,"nodeType":"127","endLine":52,"endColumn":113},{"ruleId":"133","severity":1,"message":"134","line":56,"column":33,"nodeType":"127","endLine":56,"endColumn":110},{"ruleId":"135","severity":1,"message":"136","line":58,"column":65,"nodeType":"127","endLine":58,"endColumn":149},{"ruleId":"113","severity":1,"message":"141","line":1,"column":8,"nodeType":"115","messageId":"116","endLine":1,"endColumn":13},{"ruleId":"109","replacedBy":"148"},{"ruleId":"111","replacedBy":"149"},{"ruleId":"135","severity":1,"message":"136","line":17,"column":17,"nodeType":"127","endLine":17,"endColumn":109},{"ruleId":"113","severity":1,"message":"150","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":19},{"ruleId":"135","severity":1,"message":"136","line":29,"column":61,"nodeType":"127","endLine":29,"endColumn":141},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Content' is defined but never used.","'SingleMovie' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'seccionMovie' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","'remFav' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user_id'. Either include it or remove the dependency array.","ArrayExpression",["153"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'react' is defined but never used.","'MdOutlineFavoriteBorder' is defined but never used.","'addFav' is assigned a value but never used.","'setAddfav' is assigned a value but never used.","'peliculas' is defined but never used.","React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.",["154"],["151"],["152"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [user_id]",{"range":"159","text":"160"},"Update the dependencies array to be: [value]",{"range":"161","text":"162"},[841,843],"[user_id]",[1273,1275],"[value]"]